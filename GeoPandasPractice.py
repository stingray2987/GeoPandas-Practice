# -*- coding: utf-8 -*-
"""testing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K7GaNFG-OSkyql5tbUVIM-dyNZE_pxIM
"""

!pip install geopandas

import geopandas as gpd
import pandas as pd
import matplotlib.pyplot as plt
from shapely.geometry import Point, LineString, Polygon

cities_dict = {'La Plata':{'population':9376, 'category': 'have visited', 'interesting fact': 'Incorperated as a town in 1888', 'coordinates':(38.529221, -76.974648 )},
          'Dayton': {'population':141759, 'category': 'have visted', 'interesting fact': 'Dayton is known as the birthplace of aviation', 'coordinates':(39.760979, -84.192200)},
          'Venice': {'population':261905, 'category': 'want to visit', 'interesting fact': 'There are no cars within the city', 'coordinates': (45.4404845, 12.315515)},
          'Nice': {'population':340017, 'category': 'want to visit', 'interesting fact': 'The nickname of the city is Nice la Belle', 'coordinates': (43.675819,  7.289429)}
}

city = pd.DataFrame(cities_dict)
city = city.T
print(city)

city['coordinates_geo'] = city.apply(lambda x: Point(x['coordinates'][1], x['coordinates'][0]), axis=1)
geo_city = gpd.GeoDataFrame(city, geometry = city['coordinates_geo'])
print(geo_city)

geo_city.plot(figsize = (20,10))

geo_city = geo_city.set_crs(epsg = 4326)
print(geo_city.crs)

Montauk_Lighthouse = Point( -71.85709, 41.07099)

geo_city['distance'] = geo_city.distance(Montauk_Lighthouse)

distances_min = geo_city['distance'].min()
print(distances_min)

city_close_lighthouse_v2 = geo_city[geo_city['distance'] == geo_city['distance'].min()]

print(city_close_lighthouse)

cities = gpd.datasets.get_path('naturalearth_cities')
world = gpd.datasets.get_path('naturalearth_lowres')

cities = gpd.read_file(cities)
world = gpd.read_file(world)

cities = cities.to_crs(epsg = 3395)
world = world.to_crs(epsg = 3395)

print(cities.crs)
print(world.crs)

fig, ax = plt.subplots(figsize = (20, 10))
ax.set_aspect('equal')
cities.plot(ax = ax, color = 'magenta', markersize = 10, zorder = 2)
world.plot(ax = ax, edgecolor = 'black', zorder = 1)
plt.show()

print(cities.head())

print(world.head())

Oceania = world[world['continent'] == 'Oceania']

print(Oceania)

Oceania = Oceania.to_crs('epsg:3395')
cities = cities.to_crs('epsg:3395')

Oceania_union = Oceania.unary_union

join_oceania = cities.within(Oceania_union)

print(join_oceania)

print(cities[join_oceania])

#Map of cities in Oceania
fig, ax = plt.subplots(figsize = (20,10))
ax.set_aspect('equal')
cities[join_oceania].plot(ax = ax, color = 'magenta', markersize = 10, zorder = 2)
Oceania.plot(ax = ax, edgecolor = 'black', zorder = 1)
plt.show()

cities[cities['name'] == 'Canberra']

print(cities['name'].tail(25))